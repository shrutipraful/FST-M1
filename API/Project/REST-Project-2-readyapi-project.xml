<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="176b7b3a-629a-4a90-b3c2-99eaae7d1d26" created="3.5.2" activeEnvironment="Default environment" name="REST Project 2" updated="3.5.2 2021-01-25T14:54:22Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="ffdbab5a-a83b-4788-ad9b-3473448e9f05" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://www.datasciencetoolkit.org" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://www.datasciencetoolkit.org</con:endpoint></con:endpoints><con:resource name="Xml" path="/maps/api/geocode/xml" id="6ac3b0da-dd14-4f82-a20e-c64c269b1e38"><con:settings/><con:parameters/><con:method name="Xml" id="6d92e7ab-5f5a-4e4d-b7bb-63168f059759" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>address</con:name><con:value>1600 Amphitheatre Parkway, Mountain View, CA</con:value><con:style>QUERY</con:style><con:default>1600 Amphitheatre Parkway, Mountain View, CA</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>sensor</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:request name="Request 1" id="19b304ee-7b58-41f7-9fa5-de5c523da841" mediaType="application/json"><con:settings/><con:endpoint>http://www.datasciencetoolkit.org</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters><con:entry key="address" value="1600 Amphitheatre Parkway, Mountain View, CA"/><con:entry key="sensor" value="false"/></con:parameters><con:parameterOrder><con:entry>address</con:entry><con:entry>sensor</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="ef9dcea6-9be0-40aa-9796-967a1ee2e506" name="http://www.datasciencetoolkit.org TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a0e4a530-3019-4578-ad80-35c62abd387f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="Request 1" id="64089e79-e617-4cb2-88fc-8790034f2ee1"><con:settings/><con:config service="http://www.datasciencetoolkit.org" resourcePath="/maps/api/geocode/xml" methodName="Xml" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="19b304ee-7b58-41f7-9fa5-de5c523da841" mediaType="application/json"><con:settings/><con:endpoint>http://www.datasciencetoolkit.org</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters><con:entry key="address" value="1600 Amphitheatre Parkway, Mountain View, CA"/><con:entry key="sensor" value="false"/></con:parameters><con:parameterOrder><con:entry>address</con:entry><con:entry>sensor</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>